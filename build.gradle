plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.likelion'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // DB
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.mysql:mysql-connector-j'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
}

tasks.named('test') {
    useJUnitPlatform()
}

// 서브 모듈을 위해 추가
processResources {
    dependsOn 'copyResources'
}

tasks.register('copyResources', Copy) {
    from './2025-1-SpringBootStudy-Config'  // 외부 설정 폴더 중
    include '*.properties'                  // 환경변수를 가지고 올 예정
    into 'src/main/resources/'              // 이 경로로 가져온다!
}

test {
    doFirst {
        def profile = project.hasProperty('profile') ? project.property('profile').toString() : 'local'
        jvmArgs = ["-Dspring.profiles.active=${profile}"]
    }
}
